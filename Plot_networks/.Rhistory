scale_size_continuous(range = c(0, 2)) +
guides(size = "none") +
xlim(0, 1) +
ylim(0, 1) +
scale_size_range(c(0, 2)))
plot_network = function(network, size = 1){
# extracting the number of patches
n_patch = network$summary$n_patch
# dataframe of point coordinates
points = network$points_coords
points$size = size
# making a dataframe of link coordinates
links = data.frame(x = 0, y = 0, link = 0, weight = 0)
link = 0
W = network$dispersal_matrix
for(k in 1:(n_patch-1)){
for(l in (k+1):n_patch){
if(W[k,l]>0){
link = link+1
temp_data = data.frame(x = points[c(k, l), 1], y = points[c(k,l), 2], link = link, weight = (W[k,l] + W[l,k])/2)
links = rbind(links, temp_data)
}
}
}
return(ggplot() +
geom_line(data = links, mapping = aes(x = x, y = y, group = link), color = "grey", size = 0.5) +
geom_point(data = points, mapping = aes(x = x, y = y, size = size), color = 'black') +
labs(x="",y="",color="Biomass", size="Weight") +
theme_classic() +
labs(x="",y="") +
theme(axis.text.x = element_blank(),legend.position="bottom",
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line = element_line(colour = "white")) +
xlim(min(points$x) - 0.1, max(points$x) + 0.1) +
ylim(min(points$y) - 0.1, max(points$y) + 0.1) +
scale_size_continuous(range = c(0, 2)) +
guides(size = "none") +
xlim(0, 1) +
ylim(0, 1) +
scale_size_range(c(0, 2)))
}
ggsave('fig/RGG.pdf', plot_network(RGG, rep(2, 21)), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN.pdf', plot_network(OCN, rep(2, 21)), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER.pdf', plot_network(ER, rep(2, 21), width = 5, height = 5, unit = 'cm')
K = rnorm(21, 1, 0.075)
ggsave('fig/RGG_var_med.pdf', plot_network(RGG, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN_var_med.pdf', plot_network(OCN, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER_var_med.pdf', plot_network(ER, K), width = 5, height = 5, unit = 'cm')
K = rnorm(21, 1, 0.3)
ggsave('fig/RGG_var_high.pdf', plot_network(RGG, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN_var_high.pdf', plot_network(OCN, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER_var_high.pdf', plot_network(ER, K), width = 5, height = 5, unit = 'cm')
plot_network = function(network, size = 1){
# extracting the number of patches
n_patch = network$summary$n_patch
# dataframe of point coordinates
points = network$points_coords
points$size = size
# making a dataframe of link coordinates
links = data.frame(x = 0, y = 0, link = 0, weight = 0)
link = 0
W = network$dispersal_matrix
for(k in 1:(n_patch-1)){
for(l in (k+1):n_patch){
if(W[k,l]>0){
link = link+1
temp_data = data.frame(x = points[c(k, l), 1], y = points[c(k,l), 2], link = link, weight = (W[k,l] + W[l,k])/2)
links = rbind(links, temp_data)
}
}
}
return(ggplot() +
geom_line(data = links, mapping = aes(x = x, y = y, group = link), color = "grey", size = 0.5) +
geom_point(data = points, mapping = aes(x = x, y = y, size = size), color = 'black') +
labs(x="",y="",color="Biomass", size="Weight") +
theme_classic() +
labs(x="",y="") +
theme(axis.text.x = element_blank(),legend.position="bottom",
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line = element_line(colour = "white")) +
xlim(min(points$x) - 0.1, max(points$x) + 0.1) +
ylim(min(points$y) - 0.1, max(points$y) + 0.1) +
scale_size_continuous(range = c(0, 2)) +
guides(size = "none") +
xlim(0, 1) +
ylim(0, 1) +
scale_size(range = c(0, 2)))
}
ggsave('fig/RGG.pdf', plot_network(RGG, rep(2, 21)), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN.pdf', plot_network(OCN, rep(2, 21)), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER.pdf', plot_network(ER, rep(2, 21), width = 5, height = 5, unit = 'cm')
K = rnorm(21, 1, 0.075)
ggsave('fig/RGG_var_med.pdf', plot_network(RGG, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN_var_med.pdf', plot_network(OCN, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER_var_med.pdf', plot_network(ER, K), width = 5, height = 5, unit = 'cm')
K = rnorm(21, 1, 0.3)
ggsave('fig/RGG_var_high.pdf', plot_network(RGG, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN_var_high.pdf', plot_network(OCN, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER_var_high.pdf', plot_network(ER, K), width = 5, height = 5, unit = 'cm')
plot_network = function(network){
# extracting the number of patches
n_patch = network$summary$n_patch
# dataframe of point coordinates
points = network$points_coords
points$size = 1
# finding out which point is the most centered
center.x = mean(points$x)
center.y = mean(points$y)
distance = sqrt((points$x - center.x)**2 + (points$y - center.y)**2)
center_index = which(distance == min(distance))
points$color = network$cov_matrix[center_index,]
# making a dataframe of link coordinates
links = data.frame(x = 0, y = 0, link = 0, weight = 0)
link = 0
W = network$dispersal_matrix
for(k in 1:(n_patch-1)){
for(l in (k+1):n_patch){
if(W[k,l]>0){
link = link+1
# making a dataframe of link coordinates
temp_data = data.frame(x = points[c(k, l), 1], y = points[c(k,l), 2], link = link, weight = (W[k,l] + W[l,k])/2)
links = rbind(links, temp_data)
}
}
}
return(ggplot() +
geom_line(data = links, mapping = aes(x = x, y = y, group = link), color = "grey", size = 0.5) +
geom_point(data = points, mapping = aes(x = x, y = y, size = size, color = sqrt(color))) +
geom_point(data = points[center_index,], mapping = aes(x = x, y = y, size = size), color = 'red') +
labs(x="",y="",color="Biomass", size="Weight") +
theme_classic() +
labs(x="",y="") +
theme(axis.text.x = element_blank(),legend.position="bottom",
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line = element_line(colour = "white")) +
xlim(min(points$x) - 0.1, max(points$x) + 0.1) +
ylim(min(points$y) - 0.1, max(points$y) + 0.1) +
scale_size_continuous(range = c(0, 2)) +
scale_color_continuous() +
guides(size = "none", color = 'none'))
}
# generating networks
# sources and libraries ##############################################################
rm(list = ls())
library(igraph)
library(ggplot2)
library(ggpubr)
# functions for dynamics
source("../Networks/Network_functions.R")
# loading networks #####################################
RGG = read_network("RGG")
OCN = read_network('OCN')
ER = read_network('ER')
# rewriting the plot network function to allow for points size #########################
plot_network = function(network, size = 1){
# extracting the number of patches
n_patch = network$summary$n_patch
# dataframe of point coordinates
points = network$points_coords
points$size = size
# making a dataframe of link coordinates
links = data.frame(x = 0, y = 0, link = 0, weight = 0)
link = 0
W = network$dispersal_matrix
for(k in 1:(n_patch-1)){
for(l in (k+1):n_patch){
if(W[k,l]>0){
link = link+1
temp_data = data.frame(x = points[c(k, l), 1], y = points[c(k,l), 2], link = link, weight = (W[k,l] + W[l,k])/2)
links = rbind(links, temp_data)
}
}
}
return(ggplot() +
geom_line(data = links, mapping = aes(x = x, y = y, group = link), color = "grey", size = 0.5) +
geom_point(data = points, mapping = aes(x = x, y = y, size = size), color = 'black') +
labs(x="",y="",color="Biomass", size="Weight") +
theme_classic() +
labs(x="",y="") +
theme(axis.text.x = element_blank(),legend.position="bottom",
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line = element_line(colour = "white")) +
xlim(min(points$x) - 0.1, max(points$x) + 0.1) +
ylim(min(points$y) - 0.1, max(points$y) + 0.1) +
scale_size_continuous(range = c(0, 2)) +
guides(size = "none") +
xlim(0, 1) +
ylim(0, 1) +
scale_size(range = c(0, 2)))
}
# plots for varying K ################################################################
ggsave('fig/RGG.pdf', plot_network(RGG, rep(2, 21)), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN.pdf', plot_network(OCN, rep(2, 21)), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER.pdf', plot_network(ER, rep(2, 21), width = 5, height = 5, unit = 'cm')
K = rnorm(21, 1, 0.075)
ggsave('fig/RGG_var_med.pdf', plot_network(RGG, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN_var_med.pdf', plot_network(OCN, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER_var_med.pdf', plot_network(ER, K), width = 5, height = 5, unit = 'cm')
K = rnorm(21, 1, 0.3)
ggsave('fig/RGG_var_high.pdf', plot_network(RGG, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN_var_high.pdf', plot_network(OCN, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER_var_high.pdf', plot_network(ER, K), width = 5, height = 5, unit = 'cm')
# rewriting the plot network function to color points by the covariance relative to the most centered point #########################
plot_network = function(network){
# extracting the number of patches
n_patch = network$summary$n_patch
# dataframe of point coordinates
points = network$points_coords
points$size = 1
# finding out which point is the most centered
center.x = mean(points$x)
center.y = mean(points$y)
distance = sqrt((points$x - center.x)**2 + (points$y - center.y)**2)
center_index = which(distance == min(distance))
points$color = network$cov_matrix[center_index,]
# making a dataframe of link coordinates
links = data.frame(x = 0, y = 0, link = 0, weight = 0)
link = 0
W = network$dispersal_matrix
for(k in 1:(n_patch-1)){
for(l in (k+1):n_patch){
if(W[k,l]>0){
link = link+1
# making a dataframe of link coordinates
temp_data = data.frame(x = points[c(k, l), 1], y = points[c(k,l), 2], link = link, weight = (W[k,l] + W[l,k])/2)
links = rbind(links, temp_data)
}
}
}
return(ggplot() +
geom_line(data = links, mapping = aes(x = x, y = y, group = link), color = "grey", size = 0.2) +
geom_point(data = points, mapping = aes(x = x, y = y, size = size, color = sqrt(color))) +
geom_point(data = points[center_index,], mapping = aes(x = x, y = y, size = size), color = 'red') +
labs(x="",y="",color="Biomass", size="Weight") +
theme_classic() +
labs(x="",y="") +
theme(axis.text.x = element_blank(),legend.position="bottom",
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line = element_line(colour = "white")) +
xlim(min(points$x) - 0.1, max(points$x) + 0.1) +
ylim(min(points$y) - 0.1, max(points$y) + 0.1) +
scale_size_continuous(range = c(0, 2)) +
scale_color_continuous() +
guides(size = "none", color = 'none'))
}
RGG$cov_matrix = make_cov_matrix(RGG, 0.05)
OCN$cov_matrix = make_cov_matrix(OCN, 0.05)
ER$cov_matrix = make_cov_matrix(ER, 0.05)
ggsave('fig/RGG_cov_low.pdf', plot_network(RGG), width = 3, height = 3, unit = 'cm')
ggsave('fig/OCN_cov_low.pdf', plot_network(OCN), width = 3, height = 3, unit = 'cm')
ggsave('fig/ER_cov_low.pdf', plot_network(ER), width = 3, height = 3, unit = 'cm')
# generating networks
# sources and libraries ##############################################################
rm(list = ls())
library(igraph)
library(ggplot2)
library(ggpubr)
# functions for dynamics
source("../Networks/Network_functions.R")
# loading networks #####################################
RGG = read_network("RGG")
OCN = read_network('OCN')
ER = read_network('ER')
# rewriting the plot network function to allow for points size #########################
plot_network = function(network, size = 1){
# extracting the number of patches
n_patch = network$summary$n_patch
# dataframe of point coordinates
points = network$points_coords
points$size = size
# making a dataframe of link coordinates
links = data.frame(x = 0, y = 0, link = 0, weight = 0)
link = 0
W = network$dispersal_matrix
for(k in 1:(n_patch-1)){
for(l in (k+1):n_patch){
if(W[k,l]>0){
link = link+1
temp_data = data.frame(x = points[c(k, l), 1], y = points[c(k,l), 2], link = link, weight = (W[k,l] + W[l,k])/2)
links = rbind(links, temp_data)
}
}
}
return(ggplot() +
geom_line(data = links, mapping = aes(x = x, y = y, group = link), color = "grey", size = 0.5) +
geom_point(data = points, mapping = aes(x = x, y = y, size = size), color = 'black') +
labs(x="",y="",color="Biomass", size="Weight") +
theme_classic() +
labs(x="",y="") +
theme(axis.text.x = element_blank(),legend.position="bottom",
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line = element_line(colour = "white")) +
xlim(min(points$x) - 0.1, max(points$x) + 0.1) +
ylim(min(points$y) - 0.1, max(points$y) + 0.1) +
scale_size_continuous(range = c(0, 2)) +
guides(size = "none") +
xlim(0, 1) +
ylim(0, 1) +
scale_size(range = c(0, 3)))
}
# plots for varying K ################################################################
ggsave('fig/RGG.pdf', plot_network(RGG, rep(2, 21)), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN.pdf', plot_network(OCN, rep(2, 21)), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER.pdf', plot_network(ER, rep(2, 21), width = 5, height = 5, unit = 'cm')
K = rnorm(21, 1, 0.075)
ggsave('fig/RGG_var_med.pdf', plot_network(RGG, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN_var_med.pdf', plot_network(OCN, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER_var_med.pdf', plot_network(ER, K), width = 5, height = 5, unit = 'cm')
K = rnorm(21, 1, 0.5)
ggsave('fig/RGG_var_high.pdf', plot_network(RGG, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN_var_high.pdf', plot_network(OCN, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER_var_high.pdf', plot_network(ER, K), width = 5, height = 5, unit = 'cm')
# generating networks
# sources and libraries ##############################################################
rm(list = ls())
library(igraph)
library(ggplot2)
library(ggpubr)
# functions for dynamics
source("../Networks/Network_functions.R")
# loading networks #####################################
RGG = read_network("RGG")
OCN = read_network('OCN')
ER = read_network('ER')
# rewriting the plot network function to allow for points size #########################
plot_network = function(network, size = 1){
# extracting the number of patches
n_patch = network$summary$n_patch
# dataframe of point coordinates
points = network$points_coords
points$size = sqrt(size)
# making a dataframe of link coordinates
links = data.frame(x = 0, y = 0, link = 0, weight = 0)
link = 0
W = network$dispersal_matrix
for(k in 1:(n_patch-1)){
for(l in (k+1):n_patch){
if(W[k,l]>0){
link = link+1
temp_data = data.frame(x = points[c(k, l), 1], y = points[c(k,l), 2], link = link, weight = (W[k,l] + W[l,k])/2)
links = rbind(links, temp_data)
}
}
}
return(ggplot() +
geom_line(data = links, mapping = aes(x = x, y = y, group = link), color = "grey", size = 0.5) +
geom_point(data = points, mapping = aes(x = x, y = y, size = size), color = 'black') +
labs(x="",y="",color="Biomass", size="Weight") +
theme_classic() +
labs(x="",y="") +
theme(axis.text.x = element_blank(),legend.position="bottom",
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line = element_line(colour = "white")) +
xlim(min(points$x) - 0.1, max(points$x) + 0.1) +
ylim(min(points$y) - 0.1, max(points$y) + 0.1) +
scale_size_continuous(range = c(0, 2)) +
guides(size = "none") +
xlim(0, 1) +
ylim(0, 1) +
scale_size(range = c(0, 3)))
}
# plots for varying K ################################################################
ggsave('fig/RGG.pdf', plot_network(RGG, rep(2, 21)), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN.pdf', plot_network(OCN, rep(2, 21)), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER.pdf', plot_network(ER, rep(2, 21), width = 5, height = 5, unit = 'cm')
K = rnorm(21, 1, 0.075)
ggsave('fig/RGG_var_med.pdf', plot_network(RGG, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN_var_med.pdf', plot_network(OCN, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER_var_med.pdf', plot_network(ER, K), width = 5, height = 5, unit = 'cm')
K = rnorm(21, 1, 0.5)
ggsave('fig/RGG_var_high.pdf', plot_network(RGG, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN_var_high.pdf', plot_network(OCN, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER_var_high.pdf', plot_network(ER, K), width = 5, height = 5, unit = 'cm')
# generating networks
# sources and libraries ##############################################################
rm(list = ls())
library(igraph)
library(ggplot2)
library(ggpubr)
# functions for dynamics
source("../Networks/Network_functions.R")
# loading networks #####################################
RGG = read_network("RGG")
OCN = read_network('OCN')
ER = read_network('ER')
# rewriting the plot network function to allow for points size #########################
plot_network = function(network, size = 1){
# extracting the number of patches
n_patch = network$summary$n_patch
# dataframe of point coordinates
points = network$points_coords
points$size = size**2
# making a dataframe of link coordinates
links = data.frame(x = 0, y = 0, link = 0, weight = 0)
link = 0
W = network$dispersal_matrix
for(k in 1:(n_patch-1)){
for(l in (k+1):n_patch){
if(W[k,l]>0){
link = link+1
temp_data = data.frame(x = points[c(k, l), 1], y = points[c(k,l), 2], link = link, weight = (W[k,l] + W[l,k])/2)
links = rbind(links, temp_data)
}
}
}
return(ggplot() +
geom_line(data = links, mapping = aes(x = x, y = y, group = link), color = "grey", size = 0.5) +
geom_point(data = points, mapping = aes(x = x, y = y, size = size), color = 'black') +
labs(x="",y="",color="Biomass", size="Weight") +
theme_classic() +
labs(x="",y="") +
theme(axis.text.x = element_blank(),legend.position="bottom",
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line = element_line(colour = "white")) +
xlim(min(points$x) - 0.1, max(points$x) + 0.1) +
ylim(min(points$y) - 0.1, max(points$y) + 0.1) +
scale_size_continuous(range = c(0, 2)) +
guides(size = "none") +
xlim(0, 1) +
ylim(0, 1) +
scale_size(range = c(0, 3)))
}
# plots for varying K ################################################################
ggsave('fig/RGG.pdf', plot_network(RGG, rep(2, 21)), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN.pdf', plot_network(OCN, rep(2, 21)), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER.pdf', plot_network(ER, rep(2, 21), width = 5, height = 5, unit = 'cm')
K = rnorm(21, 1, 0.075)
ggsave('fig/RGG_var_med.pdf', plot_network(RGG, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN_var_med.pdf', plot_network(OCN, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER_var_med.pdf', plot_network(ER, K), width = 5, height = 5, unit = 'cm')
K = rnorm(21, 1, 0.5)
ggsave('fig/RGG_var_high.pdf', plot_network(RGG, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN_var_high.pdf', plot_network(OCN, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER_var_high.pdf', plot_network(ER, K), width = 5, height = 5, unit = 'cm')
# generating networks
# sources and libraries ##############################################################
rm(list = ls())
library(igraph)
library(ggplot2)
library(ggpubr)
# functions for dynamics
source("../Networks/Network_functions.R")
# loading networks #####################################
RGG = read_network("RGG")
OCN = read_network('OCN')
ER = read_network('ER')
# rewriting the plot network function to allow for points size #########################
plot_network = function(network, size = 1){
# extracting the number of patches
n_patch = network$summary$n_patch
# dataframe of point coordinates
points = network$points_coords
points$size = size**2
# making a dataframe of link coordinates
links = data.frame(x = 0, y = 0, link = 0, weight = 0)
link = 0
W = network$dispersal_matrix
for(k in 1:(n_patch-1)){
for(l in (k+1):n_patch){
if(W[k,l]>0){
link = link+1
temp_data = data.frame(x = points[c(k, l), 1], y = points[c(k,l), 2], link = link, weight = (W[k,l] + W[l,k])/2)
links = rbind(links, temp_data)
}
}
}
return(ggplot() +
geom_line(data = links, mapping = aes(x = x, y = y, group = link), color = "grey", size = 0.5) +
geom_point(data = points, mapping = aes(x = x, y = y, size = size), color = 'black') +
labs(x="",y="",color="Biomass", size="Weight") +
theme_classic() +
labs(x="",y="") +
theme(axis.text.x = element_blank(),legend.position="bottom",
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line = element_line(colour = "white")) +
xlim(min(points$x) - 0.1, max(points$x) + 0.1) +
ylim(min(points$y) - 0.1, max(points$y) + 0.1) +
guides(size = "none") +
xlim(0, 1) +
ylim(0, 1) +
scale_size(range = c(0, 3)))
}
# plots for varying K ################################################################
ggsave('fig/RGG.pdf', plot_network(RGG, rep(2, 21)), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN.pdf', plot_network(OCN, rep(2, 21)), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER.pdf', plot_network(ER, rep(2, 21), width = 5, height = 5, unit = 'cm')
K = rnorm(21, 1, 0.075)
ggsave('fig/RGG_var_med.pdf', plot_network(RGG, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN_var_med.pdf', plot_network(OCN, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER_var_med.pdf', plot_network(ER, K), width = 5, height = 5, unit = 'cm')
K = rnorm(21, 1, 0.8)
ggsave('fig/RGG_var_high.pdf', plot_network(RGG, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/OCN_var_high.pdf', plot_network(OCN, K), width = 5, height = 5, unit = 'cm')
ggsave('fig/ER_var_high.pdf', plot_network(ER, K), width = 5, height = 5, unit = 'cm')
